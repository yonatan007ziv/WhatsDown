// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhatsDown.Server.Database.Context;

#nullable disable

namespace WhatsDown.Server.Database.Context.Migrations
{
    [DbContext(typeof(WhatsDownDbContext))]
    [Migration("20230918003558_OptimizedModels_AccountUser")]
    partial class OptimizedModels_AccountUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhatsDown.Server.Database.Models.AccountCredentials", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("userInformationUserId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("userInformationUserId");

                    b.ToTable("AccountCredentials");
                });

            modelBuilder.Entity("WhatsDown.Server.Database.Models.UserInformation", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("UserId");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("WhatsDown.Server.Database.Models.AccountCredentials", b =>
                {
                    b.HasOne("WhatsDown.Server.Database.Models.UserInformation", "userInformation")
                        .WithMany()
                        .HasForeignKey("userInformationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
